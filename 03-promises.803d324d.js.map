{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAWF,SAASC,cAAc,8BAmCxC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IA3CPN,EAAOe,iBAAiB,UAExB,SAAkBC,GAChBA,EAAIC,iBAEJd,EAASe,UAAW,EAQpB,IANA,IAAMC,EAAWH,EAAII,cAAcD,SAE7BE,EAASC,OAAOH,EAASE,OAAOE,OAChCC,EAAOF,OAAOH,EAASK,KAAKD,OAC9BjB,EAAQgB,OAAOH,EAASb,MAAMiB,OAEzBE,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAChCrB,EAAcqB,EAAGnB,GACdoB,MAAK,SAAAC,GACJC,EAAA9B,GAAS+B,OAAOF,QAAQA,GACxBG,QAAQC,IAAIJ,E,IAEbK,OAAM,SAAAC,GACLL,EAAA9B,GAAS+B,OAAOK,QAAQD,GACxBH,QAAQC,IAAIE,E,IAEhB3B,GAASkB,EAELC,IAAMJ,GACRR,YAAW,WACTV,EAASe,UAAW,C,GACnBZ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst buttonEl = document.querySelector('form button[type=\"submit\"]');\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  buttonEl.disabled = true;\n\n  const elements = evt.currentTarget.elements;\n\n  const amount = Number(elements.amount.value);\n  const step = Number(elements.step.value);\n  let delay = Number(elements.delay.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(success => {\n        Notiflix.Notify.success(success);\n        console.log(success);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error);\n        console.log(error);\n      });\n    delay += step;\n    /* Enable button when all promises have been settled*/\n    if (i === amount) {\n      setTimeout(() => {\n        buttonEl.disabled = false;\n      }, delay);\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`); // Fulfill\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`); // Reject\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$buttonEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","evt","preventDefault","disabled","elements","currentTarget","amount","Number","value","step","i","then","success","$parcel$interopDefault","Notify","console","log","catch","error","failure"],"version":3,"file":"03-promises.803d324d.js.map"}