{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAzCQS,SAASC,cAAc,SAG/BC,iBAAiB,UAExB,SAAkBC,GAChBA,EAAIC,iBAIJ,IAAMC,EAAWF,EAAIG,cAAcD,SACnCE,QAAQC,IAAIH,GAMZ,IAJA,IAAMI,EAASC,OAAOL,EAASI,OAAOE,OAChCC,EAAOF,OAAOL,EAASO,KAAKD,OAC9BpB,EAAQmB,OAAOL,EAASd,MAAMoB,OAEzBE,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAChCxB,EAAcwB,EAAGtB,GACduB,MAAK,SAAAC,GACJC,EAAA7B,GAAS8B,OAAOF,QAAQA,GACxBR,QAAQC,IAAIO,E,IAEbG,OAAM,SAAAC,GACLH,EAAA7B,GAAS8B,OAAOG,QAAQD,GACxBZ,QAAQC,IAAIW,E,IAEhB5B,GAASqB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n// const buttonEl = document.querySelector('form button[type=\"submit\"]');\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  // buttonEl.disabled = true;\n\n  const elements = evt.currentTarget.elements;\n  console.log(elements);\n\n  const amount = Number(elements.amount.value);\n  const step = Number(elements.step.value);\n  let delay = Number(elements.delay.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(success => {\n        Notiflix.Notify.success(success);\n        console.log(success);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error);\n        console.log(error);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`); // Fulfill\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`); // Reject\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","evt","preventDefault","elements","currentTarget","console","log","amount","Number","value","step","i","then","success","$parcel$interopDefault","Notify","catch","error","failure"],"version":3,"file":"03-promises.ddb27c42.js.map"}